import pickle
import json
from flask import Flask, request, Response

app =Flask(__name__)

def create_user():
  data = json.loads(request.data)
  if 'name' not in data or 'age' not in data:
    return Response('{"status": "error", "error": "Bad request"}', status=400, mimetype='application/json')
  pickle_in = open('data.pickle', 'rb')
  data_new = pickle.load(pickle_in)
  user['id'] == data['id']
  data_new['name'] = data['name']
  data_new['age'] = data['age']
  pickle_out = open("data.pickle","wb")
  pickle.dump(data_new, pickle_out)
  pickle_out.close()
  return Response('{"status": "ok"}', status=200, mimetype='application/json')
  
def get_all_users():
  print(request.args)
  pickle_in = open('data.pickle', 'rb')
  data_new = pickle.load(pickle_in)
  js = json.dumps(data_new)
  pickle_in.close()
  return Response(js, status=200, mimetype='application/json')

def update_user():
  data = json.loads(request.data)
  if 'name' not in data or 'age' not in data:
    return Response('{"status": "error", "error": "Bad request"}', status=400, mimetype='application/json')
  pickle_in = open('data.pickle', 'rb')
  data_new = pickle.load(pickle_in)
  for user in data_new:
    if user['id'] == data['id']:
      user['name'] = data['name']
      user['age'] = data['age']
  js = json.dumps(data_new)
  pickle_in.close()
  return Response('{"status": "ok"}', status=200, mimetype='application/json')

def delete_user():
    data = json.loads(request.data)
    pickle_in = open('data.pickle', 'rb')
    data_new = pickle.load(pickle_in)
    for user in data_new:
        if user['id'] == data['id']:
            del user
        js = json.dumps(data_new)
    pickle_in.close()
    return Response('{"status": "ok"}', status=200, mimetype='application/json')

@app.route('/users/', methods=['GET','POST',])
@app.route('/users/<int:id>', methods=['POST','PATCH', 'DELETE'])
def users():
      if request.method =='POST':
        return create_user()
      elif request.method =='GET':
        return get_all_users()
      elif request.method =='PATCH':
        return update_user()
      elif request.method =='DELETE':
        return update_user()
      else:
       pass


if __name__ == '__main__':
    app.run()


